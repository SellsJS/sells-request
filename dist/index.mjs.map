{"version":3,"sources":["../src/httpclient.ts"],"sourcesContent":["import axios, { AxiosRequestConfig } from \"axios\";\r\n\r\nfunction handleAxiosError(error: any): Error {\r\n  if (axios.isAxiosError(error)) {\r\n    const message = error.response?.data?.message || error.message;\r\n    return new Error(message);\r\n  }\r\n  return new Error('Unexpected Error: ' + (error?.message || String(error)));\r\n}\r\n\r\nfunction getEnvVar(key: string): string | undefined {\r\n  return process.env[key];\r\n}\r\n\r\nfunction resolveBaseUrl(base: string): string {\r\n  if (base.startsWith(\"http\")) return base + '/';\r\n\r\n  const envKey = base.toUpperCase();\r\n  const value = getEnvVar(envKey);\r\n\r\n  if (!value) {\r\n    throw new Error(`Base URL \"${base}\" not found in environment variables.`);\r\n  }\r\n\r\n  return value + '/';\r\n}\r\n\r\nexport const httpClient = {\r\n  get: async <T>(\r\n    baseUrl: string,\r\n    path: string = '',\r\n    config: AxiosRequestConfig = {}\r\n  ) => {\r\n    try {\r\n      return await axios.get<T>(`${resolveBaseUrl(baseUrl)}${path}`, config);\r\n    } catch (error) {\r\n      throw handleAxiosError(error);\r\n    }\r\n  },\r\n\r\n  post: <T>(\r\n    baseUrl: string,\r\n    path: string = '',\r\n    data: any,\r\n    config: AxiosRequestConfig = {}\r\n  ) => {\r\n    try {\r\n      return axios.post<T>(`${resolveBaseUrl(baseUrl)}${path}`, data, config);\r\n    } catch(error) {\r\n      throw handleAxiosError(error);\r\n    }\r\n  },\r\n\r\n  put: <T>(\r\n    baseUrl: string,\r\n    path: string = '',\r\n    data: any,\r\n    config: AxiosRequestConfig = {}\r\n  ) => {\r\n    try {\r\n      return axios.put<T>(`${resolveBaseUrl(baseUrl)}${path}`, data, config);\r\n    } catch (error) {\r\n      throw handleAxiosError(error);\r\n    }\r\n  },\r\n\r\n  delete: <T>(baseUrl: string, path: string = '', config: AxiosRequestConfig = {}) =>{\r\n    try {\r\n      return axios.delete<T>(`${resolveBaseUrl(baseUrl)}${path}`, config);\r\n    } catch (error) {\r\n      throw handleAxiosError(error);\r\n    }\r\n  },\r\n};\r\n"],"mappings":";AAAA,OAAO,WAAmC;AAE1C,SAAS,iBAAiB,OAAmB;AAC3C,MAAI,MAAM,aAAa,KAAK,GAAG;AAC7B,UAAM,UAAU,MAAM,UAAU,MAAM,WAAW,MAAM;AACvD,WAAO,IAAI,MAAM,OAAO;AAAA,EAC1B;AACA,SAAO,IAAI,MAAM,wBAAwB,OAAO,WAAW,OAAO,KAAK,EAAE;AAC3E;AAEA,SAAS,UAAU,KAAiC;AAClD,SAAO,QAAQ,IAAI,GAAG;AACxB;AAEA,SAAS,eAAe,MAAsB;AAC5C,MAAI,KAAK,WAAW,MAAM,EAAG,QAAO,OAAO;AAE3C,QAAM,SAAS,KAAK,YAAY;AAChC,QAAM,QAAQ,UAAU,MAAM;AAE9B,MAAI,CAAC,OAAO;AACV,UAAM,IAAI,MAAM,aAAa,IAAI,uCAAuC;AAAA,EAC1E;AAEA,SAAO,QAAQ;AACjB;AAEO,IAAM,aAAa;AAAA,EACxB,KAAK,OACH,SACA,OAAe,IACf,SAA6B,CAAC,MAC3B;AACH,QAAI;AACF,aAAO,MAAM,MAAM,IAAO,GAAG,eAAe,OAAO,CAAC,GAAG,IAAI,IAAI,MAAM;AAAA,IACvE,SAAS,OAAO;AACd,YAAM,iBAAiB,KAAK;AAAA,IAC9B;AAAA,EACF;AAAA,EAEA,MAAM,CACJ,SACA,OAAe,IACf,MACA,SAA6B,CAAC,MAC3B;AACH,QAAI;AACF,aAAO,MAAM,KAAQ,GAAG,eAAe,OAAO,CAAC,GAAG,IAAI,IAAI,MAAM,MAAM;AAAA,IACxE,SAAQ,OAAO;AACb,YAAM,iBAAiB,KAAK;AAAA,IAC9B;AAAA,EACF;AAAA,EAEA,KAAK,CACH,SACA,OAAe,IACf,MACA,SAA6B,CAAC,MAC3B;AACH,QAAI;AACF,aAAO,MAAM,IAAO,GAAG,eAAe,OAAO,CAAC,GAAG,IAAI,IAAI,MAAM,MAAM;AAAA,IACvE,SAAS,OAAO;AACd,YAAM,iBAAiB,KAAK;AAAA,IAC9B;AAAA,EACF;AAAA,EAEA,QAAQ,CAAI,SAAiB,OAAe,IAAI,SAA6B,CAAC,MAAK;AACjF,QAAI;AACF,aAAO,MAAM,OAAU,GAAG,eAAe,OAAO,CAAC,GAAG,IAAI,IAAI,MAAM;AAAA,IACpE,SAAS,OAAO;AACd,YAAM,iBAAiB,KAAK;AAAA,IAC9B;AAAA,EACF;AACF;","names":[]}